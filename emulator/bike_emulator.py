#Request one: ad 42 f0 03 f0 02 d9 Answer: ad 43 f0 03 f0 02 d8 DAT_004368ac
#Request variant two: ad 41 e4 26 00 00 b5 Answer: AD 90 F4 76 00 00 00 00 00 00 00 06 DAT_00436a00
#Third request: ad 41 e4 26 01 00 b4 Answer: #READY
#                                           Variant 1 - full system: AD 90 F4 76 01 00 00 01 00 00 00 05 DAT_00436a1c
#                                           Variant 2 - without battery: AD 90 F4 76 01 00 00 02 00 00 00 04 DAT_00436a1c
#System off request: ad 41 e4 26 ff 00 b6 Answer: AD 90 F4 76 FF 00 00 00 00 00 00 07 DAT_00436b18 #READY
#Battery request 1.1: ad 41 e4 26 3 0 b2 Answer: AD 90 F4 76 03 00 00 00 00 00 00 03 DAT_00436a54
#Battery request 1.2: ad 41 e4 26 3 1 b1 Answer: AD 90 F4 76 03 01 00 00 00 00 00 02 DAT_00436a54 Battery voltage in 0.05V=50mV, last four bytes in backward direction #READY
#Battery request 1.3: ad 41 e4 26 3 2 b0 Answer: AD 90 F4 76 03 02 00 00 00 00 00 01 DAT_00436a54 Battery temperature in 0.1C, last four bytes in backward direction #READY
#Battery request 1.4: ad 41 e4 26 3 3 af Answer: AD 90 F4 76 03 03 00 00 00 00 00 00 DAT_00436a54 Residual battery capacity in %, last four bytes in backward direction #READY
#Battery (and motor) request 2: ad 31 e0 16 11 c8 Answer: AD 40 F0 26 11 00 99 DAT_00436b50
#Battery request 3: ad 71 e0 56 12 8 0 40 1 fe Answer: AD 40 F0 26 12 00 98 DAT_00436b6c
#Battery (and motor) request 4: ad 31 e0 16 13 c6 Answer: AD A0 F1 86 00 00 00 00 00 00 00 00 E9 DAT_00436b88 Answers about errors and mileage (how?)
#Battery request 5: ad 41 e4 26 11 0 a4 Answer: AD 90 F4 76 11 00 00 00 00 00 00 F5 DAT_00436a8c
#Battery request 6.1: ad 41 e4 26 12 0 a3 Answer: AD 90 F4 76 12 00 00 00 00 00 00 F4 DAT_00436aa8
#Battery request 6.2: ad 41 e4 26 12 1 a2 Answer: AD 90 F4 76 12 01 00 00 00 00 00 F3 DAT_00436aa8
#...
#Battery request 6.X: ad 41 e4 26 12 3f 64 Answer: AD 90 F4 76 12 3F 00 00 00 00 00 B5 DAT_00436aa8
#Battery request 7: ad 41 e4 26 10 0 a5 Answer: AD 90 F4 76 10 00 00 00 00 00 00 F6 DAT_00436a70
#Motor request 1.1: ad 41 e4 26 2 0 b3 Answer: AD 90 F4 76 02 00 00 00 00 00 00 04 DAT_00436a38 Speed sensor value in times, last four bytes in backward direction #READY
#Motor request 1.2: ad 41 e4 26 2 1 b2 Answer: AD 90 F4 76 02 01 00 00 00 00 00 03 DAT_00436a38 Torque sensor reference voltage in 0.1V=100mV, last four bytes in backward direction #READY
#Motor request 1.3: ad 41 e4 26 2 2 b1 Answer: AD 90 F4 76 02 02 00 00 00 00 00 02 DAT_00436a38 Motor output current in percents, last four bytes in backward direction #READY
#Motor request 2: ad 71 e0 56 12 0 4 0 0 43 Answer: AD 40 F0 26 12 00 98 DAT_00436b6c
#Erase errors request: ad 41 ed 22 2 ff af Answer: AD 30 FD 12 00 C1 DAT_00436ba4
#Check display request 1: ad 41 e4 26 20 1 94 Answer: AD 90 F4 76 20 01 00 00 00 00 00 E5 DAT_00436ac4
#Check display request 2: ad 41 e4 26 20 0 95 Answer: AD 90 F4 76 20 00 00 00 00 00 00 E6 DAT_00436ac4
#Check motor request 1: ad 41 e4 26 30 0 85 Answer: AD 90 F4 76 30 00 00 00 00 00 00 D6 DAT_00436ae0
#Check motor request 2: ad 41 e4 26 31 0 84 Answer: AD 90 F4 76 31 00 00 00 00 00 00 D5 DAT_00436afc


msgs = [{'request': [0xAD, 0x42, 0xF0, 0x03, 0xF0, 0x02, 0xD9], 'response': [0xAD, 0x43, 0xF0, 0x03, 0xF0, 0x02]}, ### Connect request. No parameters
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x00, 0x00, 0xB5], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}, ### Connect request. Probably no parameters
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x01, 0x00, 0xB4], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00]}, # 8 байт сообщения - 4 байт блока данных - определяет тип устройства. 1 = нормальное устройство, 2 = мотор с нечитаемой батареей
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0xFF, 0x00, 0xB6], 'response': [0xAD, 0x90, 0xF4, 0x76, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}, ### Switch off request. Probably no parameters
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x03, 0x00, 0xB2], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}, # Probably nothing
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x03, 0x01, 0xB1], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x03, 0x01, 0x00, 0xD0, 0x02, 0x00, 0x00]}, # Battery voltage in 0.05V=50mV, last four bytes
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x03, 0x02, 0xB0], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x03, 0x02, 0x00, 0xFA, 0x00, 0x00, 0x00]}, # Battery temperature in 0.1C, last four bytes
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x03, 0x03, 0xAF], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x03, 0x03, 0x00, 0x5F, 0x00, 0x00, 0x00]}, # Residual battery capacity in %, last four bytes
        {'request': [0xAD, 0x31, 0xE0, 0x16, 0x11, 0xC8], 'response': [0xAD, 0x40, 0xF0, 0x26, 0x11, 0x00]},
        {'request': [0xAD, 0x71, 0xE0, 0x56, 0x12, 0x08, 0x00, 0x40, 0x01, 0xfe], 'response': [0xAD, 0x40, 0xF0, 0x26, 0x12, 0x00]},
        {'request': [0xAD, 0x31, 0xE0, 0x16, 0x13, 0xC6], 'response': [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF]}, # Answers about errors and mileage (how? TODO) - sent 128 times, 2 data byte - torque sensor voltage in 0.02V=20mV, 3 data byte - time from start in minutes, 4 data byte - battery voltage in volts, 5 data byte - drive unit temperature in Celsium degrees, signed (!), 6 data byte - speed in km/h, 7 data byte - cadence
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x11, 0x00, 0xA4], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x00, 0xA3], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x01, 0xA2], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x02, 0xA1], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x03, 0xA0], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x04, 0x9F], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x05, 0x9E], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x06, 0x9D], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x07, 0x9C], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x08, 0x9B], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x09, 0x9A], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0A, 0x99], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0B, 0x98], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0C, 0x97], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0D, 0x96], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0E, 0x95], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x0F, 0x94], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x10, 0x93], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x11, 0x92], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x12, 0x91], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x13, 0x90], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x13, 0x00, 0x00, 0x64, 0x00, 0x00]}, # Charge cycles, two bytes (third and fourth from end) in backward direction
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x14, 0x8F], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x15, 0x8E], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x15, 0x00, 0x00, 0x00, 0b00000000, 0b00000000]}, # Days since first charge, two bytes, format unknown (TODO)
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x16, 0x8D], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x16, 0x00, 0b00000000, 0b00000000, 0x00, 0x64]}, # Charges started from 75-100%, two bytes from end in backward direction, days since first charge, two bytes (third and fourth from end), format unknown (TODO)
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x17, 0x8C], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x17, 0x00, 0x00, 0x64, 0x00, 0x64]}, # Charges started from 24-49%, two bytes from end in backward direction, Charges started from 50-74%, two bytes (third and fourth from end) in backward direction
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x18, 0x8B], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x18, 0x00, 0x00, 0x64, 0x00, 0x00]}, # Charges started from 0-24%, two bytes (third and fourth from end) in backward direction
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x19, 0x8A], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1A, 0x89], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1B, 0x88], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1C, 0x87], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1D, 0x86], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1E, 0x85], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x1F, 0x84], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x20, 0x83], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x21, 0x82], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x22, 0x81], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x23, 0x80], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x24, 0x7F], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x25, 0x7E], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x26, 0x7D], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x27, 0x7C], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x28, 0x7B], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x29, 0x7A], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2A, 0x79], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2B, 0x78], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2C, 0x77], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2D, 0x76], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2E, 0x75], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x2F, 0x74], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x2F, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x30, 0x73], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x31, 0x72], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x32, 0x71], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x33, 0x70], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x34, 0x6F], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x35, 0x6E], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x36, 0x6D], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x37, 0x6C], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x38, 0x6B], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x39, 0x6A], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3A, 0x69], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3B, 0x68], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3C, 0x67], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3D, 0x66], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3D, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3E, 0x65], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x12, 0x3F, 0x64], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x12, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00]},
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x10, 0x00, 0xA5], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x10, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF]}, ### Unknown: end of transmission?
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x02, 0x00, 0xB3], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x02, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00]}, ### Speed sensor value in times, last four bytes in backward direction
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x02, 0x01, 0xB2], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x02, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00]}, ### Torque sensor reference voltage in 0.1V=100mV, last four bytes in backward direction
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x02, 0x02, 0xB1], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x02, 0x02, 0x00, 0x64, 0x00, 0x00, 0x00]}, ### Motor output current in percents, last four bytes in backward direction
        {'request': [0xAD, 0x71, 0xE0, 0x56, 0x12, 0x00, 0x04, 0x00, 0x00, 0x43], 'response': [0xAD, 0x40, 0xF0, 0x26, 0x12, 0x00]},
        {'request': [0xAD, 0x41, 0xED, 0x22, 0x02, 0xFF, 0xAF], 'response': [0xAD, 0x30, 0xFD, 0x12, 0x00]}, ### Erase errors
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x20, 0x00, 0x95], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}, ### Display diagnostics 1 (sent once or display diagnostics 2)
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x20, 0x01, 0x94], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]}, ### Display diagnostics 2 (sent once or display diagnostics 1)
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x30, 0x00, 0x85], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}, ### Motor rotation diagnostics 1 (sent once)
        {'request': [0xAD, 0x41, 0xE4, 0x26, 0x31, 0x00, 0x84], 'response': [0xAD, 0x90, 0xF4, 0x76, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]}] ### Motor rotation diagnostics 2 (sent continuosly)

error_codes = [
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], #16 frame block
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], #16 frame block
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				
                [0xAD, 0xA0, 0xF1, 0x86, 0x01, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 1, frame 1
                [0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 1, frame 2 - last three bytes is mileage on error
                [0xAD, 0xA0, 0xF1, 0x86, 0x51, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 2, frame 1
                [0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 2, frame 2
				[0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 3, frame 1
                [0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # Error code slot 3, frame 2
                [0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # ???
                [0xAD, 0xA0, 0xF1, 0x86, 0x00, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08], # ???
				
                [0xAD, 0xA0, 0xF1, 0x86, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00], #Total milegeage - format unknown (TODO)
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				[0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
				
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08]
] #0x01, 0x10, 0x11, 0x12 = 31 error code 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09 = ??? 0x13, 0x14 - 32 error code
  #0x20 = 33 error code 0x21 = 34 error code 0x22 = 35 error code 0x23 = 36 error code 0x24 = 37 error code
  #0x25 = 38 error code 0x26 = 39 error code
  #0x30, 0x31 = 61 error code 0x32, 0x33, 0x34, 0x35, 0x36, 0x37 = 62 error code
  #0x40 = 63 error code, 0x41, 0x42 = error code 66
  #0x50, 0x51, 0x52 = 64 error code
  #0x60, 0x61, 0x62, 0x63 = 67 error code
  #0x70, 0x71 = 68 error code
  #0x80 = 71 error code, 0x81 = 73 error code
  #0x90 = 79 error code
  #41 package - total mileage (format unknown)

'''                [0xAD, 0xA0, 0xF1, 0x86, 0x04, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x05, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x06, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x07, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x08, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x09, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x0F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x10, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x11, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x12, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x13, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x14, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x15, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x16, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x17, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x18, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x19, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x1F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x20, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x21, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x22, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x23, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x24, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x25, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x26, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x27, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x28, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x29, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x2F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x30, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x31, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x32, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x33, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x34, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x35, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x36, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x37, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x38, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x39, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x3F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x41, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x42, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x43, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x44, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x45, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x46, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x47, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x48, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x49, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x4F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x50, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x51, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x52, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x53, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x54, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x55, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x56, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x57, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x58, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x59, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x5F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x60, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x61, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x62, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x63, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x40, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x65, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x66, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x67, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x68, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x69, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x6F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x70, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x71, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x72, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x73, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x74, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x75, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x76, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x77, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x78, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x79, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7A, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7B, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7C, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7D, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7E, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x7F, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF],
                [0xAD, 0xA0, 0xF1, 0x86, 0x80, 0x64, 0x03, 0x04, 0x05, 0x06, 0x07, 0xFF]
]'''
error_counter = 0
        
######
# Алгоритм генерации ответного сообщения по заготовке
# (#F0) - всегда 0xAD
# (#F2) - равен (#M14)
# (#F3L) - равен (#M15L)
# (#F4) - равен (#M19)
# (#F3H) - равен (#M17)
# (#F1H) - равен (#F3H) + 2
# (#F1L) - пока что равен 0 (при каких условиях другие значения пока неизвестно)
# добавить нули в количестве (#F3H) - 1
######

# 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
# 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B
# E4 06 01 02 00 31 00 00 00 00 00 00 00 00 F4 06 01 07 00 31 00 00 00 00 00 00 00 00 DAT_00436afc


# E4 06 01 02 00 30 00 00 00 00 00 00 00 00 F4 06 01 07 00 30 00 00 00 00 00 00 00 00 DAT_00436ae0
# E4 06 01 02 00 20 00 00 00 00 00 00 00 00 F4 06 01 07 00 20 00 00 00 00 00 00 00 00 DAT_00436ac4
# E4 06 01 02 00 02 00 00 00 00 00 00 00 00 F4 06 01 07 00 02 00 00 00 00 00 00 00 00 DAT_00436a38
# E0 06 01 05 00 12 08 00 00 00 00 00 00 00 F0 06 01 02 00 12 00 00 00 00 00 00 00 00 DAT_00436b6c
# E0 06 01 01 00 11 00 00 00 00 00 00 00 00 F0 06 01 02 00 11 00 00 00 00 00 00 00 00 DAT_00436b50
# E0 06 01 01 00 13 08 00 00 00 00 00 00 00 F1 06 01 08 00 00 00 00 00 00 00 00 00 00 DAT_00436b88
# ED 02 01 02 00 02 FF 00 00 00 00 00 00 00 FD 02 01 01 00 00 00 00 00 00 00 00 00 00 DAT_00436ba4

buffer = []

import serial
import sys
ser = serial.Serial('COM5')
secondRequestAnswered = 0

def calculate_crc(arr):
    sum = 0
    i = 0
    while i < len(arr):
        sum += arr[i]
        i += 1
    return (((sum) ^ 0xFF) + 1) & 0xFF

while True:
    new_byte = ser.read()
    buffer.append(int(new_byte.hex(), 16))
    #print(buffer)
    i = 0
    packetFound = False
    while i < len(buffer) and not packetFound:
        if buffer[i] == 0xAD:
            #print(buffer)
            a = i + 2
            while a < len(buffer):
                if calculate_crc(buffer[i+1:a]) == buffer[a]:
                    packet = buffer[i:a+1]
                    #print('package parsed:', packet)
                    buffer = buffer[a+1:]
                    j = 0
                    packetRecognized = False
                    while j < len(msgs):
                        if msgs[j]['request'] == packet:
                            if j == 10:
                                if error_counter == 128:
                                    error_counter = 0
                                msgs[j]['response'] = error_codes[error_counter]
                                error_counter += 1
                            packetRecognized = True
                            tmp = []
                            t = 0
                            while t < len(msgs[j]['response']):
                                tmp.append(msgs[j]['response'][t])
                                t += 1
                            tmp.append(calculate_crc(tmp[1:]))
                            #print('response found:', tmp)
                            print(packet, j, tmp)
                            ser.write(bytearray(tmp))
                            if j == 3:
                                sys.exit(0)
                            break
                        j += 1
                    if not packetRecognized:
                        print('unknown packet:', packet)
                    packetFound = True
                    break
                a += 1
        i += 1
    #print(buffer)

ser.close()